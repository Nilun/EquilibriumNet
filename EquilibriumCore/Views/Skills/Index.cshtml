@model EquilibriumCore.Models.Skills

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    Dictionary<string, List<string>> category = ViewBag.catDictio;
    List<EquilibriumCore.Models.Skills> skillsF = ViewBag.filtered;
}
<link rel="stylesheet" href="~/css/site.css" />
<div class="wrapper">
    <nav id="sidebar">
        <div class="sidebar-header">
            <h3>Classes Skills</h3>
        </div>
        <ul>
            <li><h3> <a asp-area="" asp-controller="Skills" asp-action="Index"> All  </a></h3></li>

            @foreach (var sCat in category.Keys)
            {
                <li><h3> <a href="?sCat=@Html.Raw(sCat.Count() > 0 ? sCat.Remove(0, 1) : sCat)"> @Html.Raw(sCat.Count() > 0 ? sCat.Remove(0, 1) : sCat) </a></h3></li>

                List<string> Cats = category[sCat];
                @foreach (var Cat in Cats)
                {
                    <li> <h4><a href="?sCat=@Html.Raw(sCat.Count() > 0 ? sCat.Remove(0, 1) : sCat)&cat=@Html.Raw(Cat.Count() > 0 ? Cat.Remove(0, 1) : Cat)"> &nbsp; @Html.Raw(Cat.Count() > 0 ? Cat.Remove(0, 1) : Cat)</a></h4> </li>
                }
            }
        </ul>
    </nav>
    <div id="content">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Effect
                    </th>
                    <th>
                        Level Max
                    </th>
                    <th>
                        Tags
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (Skills s in skillsF)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => s.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => s.Effect)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => s.levelMax)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => s.Tags)
                    </td>
                </tr>

                }
            </tbody>
            </table>
        </div>
</div>
