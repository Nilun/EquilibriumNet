@model IEnumerable<EquilibriumCore.Models.Skills>

@{
    ViewData["Title"] = "Select";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Select One ...</h2>
<select id="filterSC" onchange="Filter()">
    <option value=""></option>
    @foreach (string item in ViewBag.SupCats)
    {
    <option value="@item">@item</option>
    }
</select>
<select id="filterC" onchange="Filter()">
    <option value=""></option>
    @foreach (string item in ViewBag.Cats)
    {
        <option value="@item">@item</option>
    }
</select>
<select id="filterT" onchange="Filter()">
    <option value=""></option>
    @foreach (string item in ViewBag.Tags)
    {
        <option value="@item">@item</option>
    }
</select>
<table class="table">
    <thead>
        <tr>           
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Effect)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.levelMax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tags)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr  class="Skills" id="@item.getIDComposed()">
          
                        <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Effect)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.levelMax)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tags)
            </td>
            <td>
                <a asp-action="AddSkillsFP" asp-controller="FeuillePersonnages" asp-route-id="@ViewBag.FP" asp-all-route-data="@{ new Dictionary<string, string> { {"SkillId" ,item.ID.ToString() }, {"id", ViewBag.FP.ToString() } }; } ">Selected</a>                
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    function Filter() {
        // Declare variables
        var ul, li, i;
        filterOnSC = document.getElementById("filterSC").value;
        filterOnC = document.getElementById("filterC").value;
        filterOnT = document.getElementById("filterT").value;
        li = document.getElementsByClassName("Skills");
        
       
        
        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            var s = li[i].id.split(",");
            var tagok = false;
            var COK = false;
            var SCOK = false;
           
            if ((filterOnSC == "" || s[0] == filterOnSC)) {
                COK = true;
               // console.log(s[0] + " == " + filterOnSC + (s[0] == filterOnSC));
            }
            if ((filterOnC == "" || s[1] == filterOnC)) {
               // console.log(s[1] + " == " + filterOnC + (s[1] == filterOnC));
                SCOK = true;
            }
            if((filterOnT != ""))
            {
               
                for (var j = 0; j < s.length; j++) {

                    if ((filterOnT == s[j])) //
                    {

                        tagok = true;
                    }


                }
                
            } else {
                tagok = true;
            }

            if (COK && SCOK && tagok) {
               // console.log(COK + " " + SCOK + " " + tagok)
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }


        }
    }
</script>