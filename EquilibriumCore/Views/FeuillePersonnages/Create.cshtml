@model EquilibriumCore.Models.FeuillePersonnage

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   
<div class="form-horizontal">
    <h4>Character sheet</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table>
        <tr>
            <td>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Race, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Race, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>

            <td>

                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </td>

        </tr>

        <tr>

            <td>

                @Html.LabelFor(model => model.HPPerLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.HPPerLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HPPerLevel, "", new { @class = "text-danger" })
            </td>

        </tr>

        @*<tr>

                <td>
                    @Html.LabelFor(model => model.HPNow, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.HPNow, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HPNow, "", new { @class = "text-danger" })
                </td>

            </tr>*@

        <tr>

            <td>
                @Html.LabelFor(model => model.MemoryBonus, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.MemoryBonus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemoryBonus, "", new { @class = "text-danger" })
            </td>

        </tr>

    </table>












    <h3>Soldier Skills</h3>

    <table>
        <tr>
            <td>One Hand (Swiftness)</td>
            <td>
                @Html.EditorFor(model => model.OneHand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OneHand, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Light One Hand (Malice) </td>
            <td>
                @Html.EditorFor(model => model.LOneHand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LOneHand, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Two Hand (Brutality)</td>
            <td>
                @Html.EditorFor(model => model.TwoHand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TwoHand, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Throwing (Malice)</td>
            <td>
                @Html.EditorFor(model => model.Throw, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Throw, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Archery (Brutality)</td>
            <td>
                @Html.EditorFor(model => model.Bow, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bow, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>BodyBuilding (Vitality) </td>
            <td>
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Parry (Vitality) </td>
            <td>
                @Html.EditorFor(model => model.Parry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parry, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>

    <h3>Magic Skills</h3>

    <table>
        <tr>
            <td>Elemental Magic (Spirit)</td>
            <td>
                @Html.EditorFor(model => model.Elem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Elem, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Occult Magic (Malice) </td>
            <td>
                @Html.EditorFor(model => model.Occult, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Occult, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Primordial Magic (Brutality)</td>
            <td>
                @Html.EditorFor(model => model.Primordial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Primordial, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Metamagic (Swiftness)</td>
            <td>
                @Html.EditorFor(model => model.Metamagic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Metamagic, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Infusion (Spirit)</td>
            <td>
                @Html.EditorFor(model => model.Infusion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Infusion, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Resistance (Vitality) </td>
            <td>
                @Html.EditorFor(model => model.Resist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resist, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Magic Indentification <br /> (Swiftness) </td>
            <td>
                @Html.EditorFor(model => model.MagicIdentif, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MagicIdentif, "", new { @class = "text-danger" })
            </td>
        </tr>
    </table>

    <h3>Adventure Skills</h3>

    <table>
        <tr>
            <td>Stealth (Malice)</td>
            <td>
                @Html.EditorFor(model => model.Stealth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stealth, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Survival (Swiftness) </td>
            <td>
                @Html.EditorFor(model => model.Survival, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Survival, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Perception (Spirit)</td>
            <td>
                @Html.EditorFor(model => model.Perception, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Perception, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Speechcraft (Malice)</td>
            <td>
                @Html.EditorFor(model => model.Speech, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Speech, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>History (Spirit)</td>
            <td>
                @Html.EditorFor(model => model.History, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.History, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Medic (Spirit)</td>
            <td>
                @Html.EditorFor(model => model.Medic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Medic, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Empath (Swiftness) </td>
            <td>
                @Html.EditorFor(model => model.Empath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Empath, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Athletism (Brutality) </td>
            <td>
                @Html.EditorFor(model => model.Athletism, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Athletism, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Acrobatics (Vitality) </td>
            <td>
                @Html.EditorFor(model => model.Acrobatics, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Acrobatics, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Craft (Brutality) </td>
            <td>
                @Html.EditorFor(model => model.CraftB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CraftB, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Craft (Swiftness) </td>
            <td>
                @Html.EditorFor(model => model.CraftSW, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CraftSW, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Craft (Spirit) </td>
            <td>
                @Html.EditorFor(model => model.CraftS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CraftS, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Craft (Malice) </td>
            <td>
                @Html.EditorFor(model => model.CraftM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CraftM, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Intimidation (Brutality) </td>
            <td>
                @Html.EditorFor(model => model.Intimidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Intimidation, "", new { @class = "text-danger" })
            </td>
        </tr>



    </table>
    Passive :
    <textarea asp-for="passive" class="form-control"></textarea>
    <span asp-validation-for="passive" class="text-danger"></span>

    Stuff :
    <textarea asp-for="Stuff" class="form-control"></textarea>
    <span asp-validation-for="Stuff" class="text-danger"></span>

    Technic and Spell :
    <textarea asp-for="comp" class="form-control"></textarea>
    <span asp-validation-for="comp" class="text-danger"></span>


    Shared ?
    <input type="checkbox" asp-for="Shared" value="true" class="form-control" />
    <span asp-validation-for="Shared" class="text-danger"></span>

    <tr>
        <td>
           Partie linked
        </td>
        <td>
           
            <select asp-for="partie" value="true" class="form-control">

                @foreach (string partie in Model.partiePossible)
                {
                    <option value="@partie">@partie</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.partie, "", new { @class = "text-danger" })
        </td>
    </tr>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>


</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
